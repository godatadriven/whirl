source:
  type: "dbt"
  config:
    # Coordinates
    # To use this as-is, set the environment variable DBT_PROJECT_ROOT to the root folder of your dbt project
    manifest_path: "${DBT_PROFILES_DIR}/target/manifest.json"
    catalog_path: "${DBT_PROFILES_DIR}/target/catalog.json"
    # sources_path: "${DBT_PROJECT_ROOT}/target/sources.json" # optional for freshness
    test_results_path: "${DBT_PROFILES_DIR}/target/run_results.json" # optional for recording dbt test results after running dbt test

    # Options
    target_platform: "postgres" # e.g. bigquery/postgres/etc.

    # Whether the new tags, terms and owners to be added will override the existing ones added only by this source or not. Value for this config can be "PATCH" or "OVERRIDE"
    write_semantics: OVERRIDE
    # This is added to DataHub tags generated by dbt
    tag_prefix: 'dbt_tag_prefix:'

    # With the next part of this recipe, we add more metadata
    # https://datahubproject.io/docs/generated/ingestion/sources/dbt#dbt-meta-automated-mappings
    
    # `meta` config for dbt models
    meta_mapping:
      has_pii:
        match: True
        operation: "add_tag"
        config:
          tag: "has_pii"
      
      business_owner:
        match: ".*"
        # add_owner - Requires owner_type property in config which can be either user or group. Optionally accepts the owner_category config property which you can set to one of ['TECHNICAL_OWNER', 'BUSINESS_OWNER', 'DATA_STEWARD', 'DATAOWNER' (defaults to DATAOWNER).
        operation: "add_owner"
        config:
          owner_type: user
          owner_category: BUSINESS_OWNER
      
      technical_owner:
        match: ".*"
        # add_owner - Requires owner_type property in config which can be either user or group. Optionally accepts the owner_category config property which you can set to one of ['TECHNICAL_OWNER', 'BUSINESS_OWNER', 'DATA_STEWARD', 'DATAOWNER' (defaults to DATAOWNER).
        operation: "add_owner"
        config:
          owner_type: user
          owner_category: TECHNICAL_OWNER

      terms:
        match: ".*"
        operation: "add_terms"
        config:
          separator: ","

    
    # `meta` config for columns in dbt models
    column_meta_mapping:
      terms:
        match: ".*"
        operation: "add_terms"
        config:
          separator: ","

      is_pii:
        match: True
        operation: "add_tag"
        config:
          tag: "pii"


    # `tag` config for dbt entities
    query_tag_mapping:
      tag:
        match: ".*"
        operation: "add_tag"
        config:
          tag: "{{ $match }}"
